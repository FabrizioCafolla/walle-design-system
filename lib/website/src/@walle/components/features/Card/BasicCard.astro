---
import { Button } from "@walle/components";
import { Icon } from "astro-icon/components";

export interface Props {
  title: string;
  content: string;
  imageUrl?: string;
  imageAlt?: string;
  linkUrl: string;
  buttonText?: string;
  buttonType?: "primary" | "secondary" | "white";
  buttonOutline?: boolean;
  linkTarget?: string;
  extraClass?: string;
  variant?: "default" | "horizontal" | "compact";
  elevated?: boolean;
  buttonIcon?: string;
  clickableCard?: boolean;
  badge?:
    | {
        text: string;
        color?: "primary" | "secondary";
      }
    | undefined;
}

const {
  title,
  content,
  imageUrl,
  imageAlt = "",
  linkUrl,
  buttonText = "Scopri di pi√π",
  buttonType = "primary",
  buttonOutline = false,
  linkTarget,
  extraClass = "",
  variant = "default",
  elevated = false,
  buttonIcon = "fa:arrow-right",
  clickableCard = false,
  badge,
} = Astro.props;

const cardClasses = [
  "eos-card",
  `eos-card-${variant}`,
  elevated ? "eos-card-elevated" : "",
  clickableCard ? "eos-card-clickable" : "",
  extraClass,
]
  .filter(Boolean)
  .join(" ");

const CardElement = clickableCard ? "a" : "div";
const cardAttrs = clickableCard ? { href: linkUrl, target: linkTarget } : {};
---

<CardElement class={cardClasses} {...cardAttrs}>
  {
    imageUrl && (
      <div class="eos-card-image">
        <img src={imageUrl} alt={imageAlt} loading="lazy" />
        {badge && (
          <span class={`eos-badge eos-badge-${badge.color || "primary"}`}>{badge.text}</span>
        )}
      </div>
    )
  }
  <div class="eos-card-content">
    <h3 class="eos-card-title">{title}</h3>
    <p class="eos-card-description">{content}</p>
    {
      !clickableCard && (
        <div class="eos-card-actions">
          <Button
            text={buttonText}
            link={linkUrl}
            type={buttonType}
            outline={buttonOutline}
            target={linkTarget}
            iconName={buttonIcon}
            size="medium"
          />
        </div>
      )
    }
  </div>
  {
    clickableCard && (
      <div class="eos-card-overlay">
        <Icon name={buttonIcon} class="eos-card-overlay-icon" />
      </div>
    )
  }
</CardElement>

<style>
  .eos-card {
    --card-radius: 1.2rem;
    --card-padding: 1.5rem;
    --card-bg: var(--white);
    --card-shadow: 0 4px 24px 0 rgba(0, 0, 0, 0.07);
    --card-hover-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.13);
    --card-border: 1.5px solid var(--gray-light);

    background: var(--card-bg);
    border-radius: var(--card-radius);
    box-shadow: var(--card-shadow);
    border: var(--card-border);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    transition:
      box-shadow 0.18s cubic-bezier(0.23, 1.01, 0.32, 1),
      transform 0.18s cubic-bezier(0.23, 1.01, 0.32, 1);
    position: relative;
    min-width: 0;
    height: 100%;
  }

  .eos-card:hover,
  .eos-card:focus-within {
    box-shadow: var(--card-hover-shadow);
    transform: translateY(-4px) scale(1.015);
    z-index: 2;
  }

  .eos-card-image {
    width: 100%;
    aspect-ratio: 16/9;
    overflow: hidden;
    position: relative;
    background: var(--gray-light);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .eos-card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition:
      filter 0.25s,
      transform 0.25s;
    filter: grayscale(12%) brightness(1.07) contrast(1.07);
    border-radius: 0 0 var(--card-radius) var(--card-radius);
  }

  .eos-card:hover .eos-card-image img {
    filter: grayscale(0%) brightness(1.13) contrast(1.13) saturate(1.08);
    transform: scale(1.035);
  }

  .eos-badge {
    position: absolute;
    top: 1.1rem;
    left: 1.1rem;
    background: var(--primary);
    color: var(--white);
    font-size: 0.78rem;
    font-weight: 700;
    padding: 0.32em 1.1em;
    border-radius: 1.2em;
    letter-spacing: 0.09em;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.07);
    opacity: 0.97;
    z-index: 2;
    text-transform: uppercase;
    pointer-events: none;
  }
  .eos-badge-secondary {
    background: var(--secondary);
  }

  .eos-card-content {
    padding: var(--card-padding);
    display: flex;
    flex-direction: column;
    gap: 0.7rem;
    flex: 1;
  }

  .eos-card-title {
    font-size: 1.25rem;
    font-weight: 800;
    color: var(--primary-dark);
    margin: 0 0 0.2em 0;
    letter-spacing: -0.01em;
    line-height: 1.2;
    transition: color 0.18s;
  }

  .eos-card-description {
    color: var(--gray-dark);
    font-size: 1.05rem;
    margin: 0 0 0.5em 0;
    line-height: 1.6;
    min-height: 2.5em;
    flex: 1;
  }

  .eos-card-actions {
    margin-top: 1.2rem;
    padding-top: 0;
    text-align: right;
  }

  .eos-card-elevated {
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.13);
  }

  .eos-card-clickable {
    cursor: pointer;
    text-decoration: none;
    outline: none;
  }

  .eos-card-clickable:focus {
    outline: 2px solid var(--primary);
    outline-offset: 2px;
  }

  .eos-card-clickable .eos-card-overlay {
    pointer-events: none;
  }

  .eos-card-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(120deg, var(--primary) 60%, var(--secondary) 100%);
    opacity: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: opacity 0.18s;
    z-index: 3;
  }

  .eos-card-clickable:hover .eos-card-overlay,
  .eos-card-clickable:focus .eos-card-overlay {
    opacity: 0.13;
  }

  .eos-card-overlay-icon {
    width: 2.2rem;
    height: 2.2rem;
    color: var(--white);
    opacity: 0.7;
  }

  @media (max-width: 700px) {
    .eos-card-content {
      padding: 1rem;
    }
    .eos-card-title {
      font-size: 1.08rem;
    }
    .eos-card-description {
      font-size: 0.97rem;
    }
    .eos-card-image {
      aspect-ratio: 16/10;
    }
  }

  @media (max-width: 480px) {
    .eos-card-content {
      padding: 0.8rem;
    }
    .eos-card-title {
      font-size: 1rem;
    }
    .eos-card-description {
      font-size: 0.9rem;
    }
    .eos-card-image {
      aspect-ratio: 16/12;
    }
  }
</style>
